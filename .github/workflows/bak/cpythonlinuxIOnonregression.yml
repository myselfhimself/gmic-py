name: CPython gmic-py optimized vs gmic-cli Linux I/O non-regression

on:
  push:
    paths:
    - "**cpythonlinuxIOnonregression.yml" # current file
  schedule:
    - cron: '0 0 * * *' # Every night, midnight

jobs:
  build-linux-optimized-IO-non-regression:

    runs-on: ubuntu-latest
    env:
      GMIC_VERSION: 2.9.1
      PYTHON3: python3
      PIP3: pip3
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache compiled gmic-cli
      id: cache-gmic-cli
      uses: actions/cache@v1
      with:
        path: gmic
        key: ${{ runner.os }}-gmic-cli-${{ env.GMIC_VERSION }}
    - name: Cache compiled gmic-py
      id: cache-gmic-py
      uses: actions/cache@v1
      with:
        path: build/lib.linux-x86_64-3.7/gmic.cpython-37m-x86_64-linux-gnu.so
        key: ${{ runner.os }}-gmic-py-${{ env.GMIC_VERSION }}-${{ hashFiles('**/gmicpy.cpp') }}-${{ hashFiles('**/gmicpy.h') }}-${{ hashFiles('**/setup.py') }}
    - name: Build gmic-cli if needed
      run: |
        sudo apt-get install -y libfftw3-dev libcurl4-openssl-dev libpng-dev zlib1g-dev libomp5 libomp-dev
      if: steps.cache-gmic-cli.outputs.cache-hit != 'true'
    - name: Build gmic-py if needed
      run: |
        sudo apt-get install -y libfftw3-dev libcurl4-openssl-dev libpng-dev zlib1g-dev libomp5 libomp-dev
        bash build_tools.bash 2_compile
      if: steps.cache-gmic-py.outputs.cache-hit != 'true'
    - name: run IO non regression tests using compiled gmic-py and gmic-cli
      working-directory: ./
      run: |
        for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done

        export PATH=$PATH:$(readlink -f .)
        gmic --version

        echo "Running gmic-py vs. gmic-cli non-regression pytests" 
        bash build_tools.bash 31_test_compiled_so_filters_io

    - name: Upload images directory as artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: test-images 
        path: build/lib.linux-x86_64-3.7/test-images
