name: CPython Pypi Manylinux Optimized release of GMIC Python 2010 & 2014 x86_64
# Ugly mix of https://github.com/htm-community/htm.core/blob/master/.github/workflows/build.yml and https://github.com/pypa/python-manylinux-demo

# Allow running this job only for v* tag pushes
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-manylinux-optimized-test-ontag-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6'] #Python versions iteration happens within the manylinux docker images
        plat: ['manylinux2010_x86_64', 'manylinux2014_x86_64']
        include:
          - plat: manylinux2010_x86_64
            docker_image: 'quay.io/pypa/manylinux2010_x86_64:latest'
            pre_cmd:
          - plat: manylinux2014_x86_64
            docker_image: 'quay.io/pypa/manylinux2014_x86_64:latest'
            pre_cmd:
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      # Detect G'MIC target version from VERSION file
      - name: Detect G'MIC target version
        run: echo "GHA_GMIC_VERSION=$(GHA_QUIET=1 bash build_tools.bash __get_py_package_version)" >> $GITHUB_ENV
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: build, test packages on ${{ matrix.plat }} architecture and publish them to PyPI as version ${{ env.GHA_GMIC_VERSION }}
        working-directory: ./
        env:
          TWINE_PASSWORD_GITHUB_SECRET: ${{ secrets.TWINE_PASSWORD_GITHUB_SECRET }} # For build_tools.bash 11_send_to_pypi
          DOCKER_IMAGE: ${{ matrix.docker_image }}
          PLAT: ${{ matrix.plat }}
          CMD: ${{ matrix.cmd }}
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          bash build_tools.bash 33_build_manylinux && bash build_tools.bash 11_send_to_pypi
      - name: upload wheelhouse as artifact
        uses: actions/upload-artifact@v2
        with:
          name: manylinux-gmicpy-optimized-released-wheels
          path: wheelhouse/
