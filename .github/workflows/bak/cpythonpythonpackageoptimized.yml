name: CPython GMIC Optimized Python package (Source and Debian/Ubuntu OS compilation)
# For development purpose only, our fastest build chain with testing and without pypi sending

on: [push]

jobs:
  build-linux-optimized-test-norelease:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1
      # Prevent running this job on tag-based releases
    - name: Check if Git tag exists
      run: echo "HEAD_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV
    - name: Runs only if Git tag does not exist
      run: |
        echo "This runs because Git tag points at HEAD ..."
        exit 1
      if: env.HEAD_TAG != ''

    - name: Detect G'MIC target version
      run: echo "GMIC_VERSION=$(cat VERSION)" >> $GITHUB_ENV

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Compile and run tests for gmic-py ${{ env.GMIC_VERSION }} on .so, .whl and source distribution
      working-directory: ./
      env:
        # TWINE_PASSWORD_GITHUB_SECRET: ${{ secrets.TWINE_PASSWORD_GITHUB_SECRET }} # For build_tools.bash 11_send_to_pypi
        PYTHON3: python3
        PIP3: pip3
      run: |
        for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
        sudo apt-get update; sudo apt-get install -y libfftw3-dev libcurl4-openssl-dev libpng-dev zlib1g-dev libomp5 libomp-dev
        sudo apt-get install clang-format
        bash build_tools.bash 21_check_c_style # should stop this script on style error
        bash build_tools.bash 23_check_python_style # should stop this script on style error

        bash build_tools.bash 2_compile #2b_compile_debug
        bash build_tools.bash 3_test_compiled_so
        # && bash build_tools.bash 11_send_to_pypi #Note that most probably nothing will be sent to PyPI because of too modern linked libraries 
    - name: upload .so optimized build dir as artifact
      uses: actions/upload-artifact@v2
      with:
        name: gmic-py-ubuntu-optimized-build-dir
        path: build/
